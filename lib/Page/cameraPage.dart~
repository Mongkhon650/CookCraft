import 'dart:io';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import '../models/ingredients_detect.dart';
import 'package:cookcraft/Components/bounding_box_painter.dart';

class CameraPage extends StatefulWidget {
  const CameraPage({Key? key}) : super(key: key);

  @override
  _CameraPageState createState() => _CameraPageState();
}

class _CameraPageState extends State<CameraPage> {
  File? _image;
  bool _isLoading = false;
  List<Map<String, dynamic>> _predictions = [];
  double _imageWidth = 1.0;
  double _imageHeight = 1.0;

  final ImagePicker _picker = ImagePicker();

  Future<void> _pickImageFromGallery() async {
    final pickedFile = await _picker.pickImage(source: ImageSource.gallery);
    if (pickedFile != null) {
      setState(() {
        _image = File(pickedFile.path);
        _predictions = [];
      });
      await _processImage(_image!.path);
    }
  }

  Future<void> _processImage(String imagePath) async {
    setState(() {
      _isLoading = true;
    });

    try {
      final analysisResult = await IngredientsDetect.analyzeImage(imagePath);

      final predictions = List<Map<String, dynamic>>.from(analysisResult["predictions"]);

      setState(() {
        _predictions = predictions;
        _imageWidth = analysisResult["image"]["width"].toDouble();
        _imageHeight = analysisResult["image"]["height"].toDouble();
      });
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Error: $e')),
      );
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('ถ่ายภาพวัตถุดิบ')),
      body: Column(
        children: [
          if (_image != null)
            Expanded(
              child: Stack(
                children: [
                  Image.file(
                    _image!,
                    fit: BoxFit.contain,
                    width: double.infinity,
                  ),
                  if (_predictions.isNotEmpty)
                    CustomPaint(
                      size: Size.infinite,
                      painter: BoundingBoxPainter(
                        predictions: _predictions,
                        imageWidth: _imageWidth,
                        imageHeight: _imageHeight,
                      ),
                    ),
                ],
              ),
            ),
          if (_isLoading)
            const CircularProgressIndicator(),
          ElevatedButton(
            onPressed: _pickImageFromGallery,
            child: const Text('เลือกภาพ'),
          ),
        ],
      ),
    );
  }
}
